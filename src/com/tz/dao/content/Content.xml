<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tz.dao.content.IContentMapper" >
	<select id="findContents" resultType="Content" parameterType="TzParams">
		SELECT
			id,
			cover,
			start_position as startPosition,
			end_position as endPosition,
			shopkeeper_id as shopkeeperId,
			title,
			original_price as originalPrice,
			discounted_price as discountedPrice,
			express_price as expressPrice,
			style,
			unit,
			state,
			goods_type as goodsType,
			isRecommend,
			max_price as maxPrice ,
			min_price as minPrice,
			photography_type as photographyType,
			create_time as createTime,
			edit_time as editTime,
			carousel1,
			carousel2,
			carousel3
		FROM
			m_goods
		<trim prefix="WHERE" prefixOverrides="AND | OR">  
			<if test="@com.tz.util.TmStringUtils@isNotEmpty(keyword)">
				and  title LIKE '%${keyword}%'
			</if>
			<if test="@com.tz.util.TmStringUtils@isNotEmpty(isDelete)">
				and  state = #{isDelete}
			</if>
			
		</trim>
		ORDER BY ${order}
		LIMIT #{pageNo} ,#{pageSize};				
	</select>
	
	
	<select id="count" resultType="int" parameterType="TzParams">
		SELECT
			count(1) 
		FROM
			m_goods 
		<trim prefix="WHERE" prefixOverrides="AND | OR">  
			
			<if test="@com.tz.util.TmStringUtils@isNotEmpty(keyword)">
				and   title LIKE '%${keyword}%'
			</if>
			<if test="@com.tz.util.TmStringUtils@isNotEmpty(isDelete)">
				and  state = #{isDelete}
			</if>
		</trim>
	</select>
	
	
	<select id="get" resultType="Content">
		SELECT
			id,
			cover,
			start_position as startPosition,
			end_position as endPosition,
			shopkeeper_id as shopkeeperId,
			title,
			original_price as originalPrice,
			discounted_price as discountedPrice,
			express_price as expressPrice,
			style,
			unit,
			state,
			goods_type as goodsType,
			isRecommend,
			max_price as maxPrice ,
			min_price as minPrice,
			photography_type as photographyType,
			create_time as createTime,
			edit_time as editTime,
			carousel1,
			carousel2,
			carousel3
		FROM
			m_goods where id = #{id}
	</select>
	
	<update id="update" parameterType="Content">
		update m_goods 
		<set>
			<if test="state!=null">state=#{state},</if>
			<if test="isRecommend!=null">isRecommend=#{isRecommend},</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="TzParams">
<!-- 	delete from m_goods  where id = #{id} -->
		update m_goods set state = 0 where id = #{idStr}
	</delete>
	
</mapper>